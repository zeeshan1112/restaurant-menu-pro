const { Octokit } = require("@octokit/rest");
const REPO_OWNER = 'zeeshan1112';
const REPO_NAME = 'restaurant-menu-pro';
const octokit = new Octokit({ auth: process.env.GITHUB_PAT });
exports.handler = async function(event) { if (event.httpMethod === 'GET') { try { const { data } = await octokit.repos.getContent({ owner: REPO_OWNER, repo: REPO_NAME, path: 'menu.json' }); const content = Buffer.from(data.content, 'base64').toString('utf-8'); return { statusCode: 200, body: content }; } catch (error) { return { statusCode: 500, body: JSON.stringify({ message: 'Error fetching menu' }) }; } } if (event.httpMethod === 'POST') { try { const { data: { sha } } = await octokit.repos.getContent({ owner: REPO_OWNER, repo: REPO_NAME, path: 'menu.json' }); const newContent = Buffer.from(event.body).toString('base64'); await octokit.repos.createOrUpdateFileContents({ owner: REPO_OWNER, repo: REPO_NAME, path: 'menu.json', message: `[CMS] Update menu: ${new Date().toISOString()}`, content: newContent, sha: sha, }); return { statusCode: 200, body: JSON.stringify({ message: 'Menu updated' }) }; } catch (error) { return { statusCode: 500, body: JSON.stringify({ message: 'Error updating menu' }) }; } } return { statusCode: 405, body: 'Method Not Allowed' }; };